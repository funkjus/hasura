{"version":3,"sources":["logo.svg","graphql/queries.js","Task.js","Tasks.js","TodoInput.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","GET_TODOS","gql","_templateObject","Object","taggedTemplateLiteral","ADD_TODO","_templateObject2","REMOVE_TODO","_templateObject3","_templateObject4","Task","_ref","todo","_useMutation","useMutation","removeTodoMutation","slicedToArray","react_default","a","createElement","key","id","className","type","checked","completed","onChange","_ref2","task","onClick","variables","optimisticResponse","update","cache","todos","readQuery","query","filter","t","writeQuery","data","Tasks","_useQuery","useQuery","loading","error","map","src_Task_0","updateCache","existingTodos","newTodo","insert_todos_one","concat","toConsumableArray","src_TodoInput","_useState","useState","_useState2","setTask","addTodo","submitTask","placeholder","value","e","target","onKeyPress","client","ApolloClient","uri","InMemoryCache","App","ApolloProvider","src","logo","alt","src_Tasks_0","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fb984441.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_TODOS = gql`\r\n  query GetTodos {\r\n    todos {\r\n      id\r\n      task\r\n      completed\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_TODO = gql`\r\n  mutation($task: String!) {\r\n    insert_todos_one(object: { task: $task }) {\r\n      id\r\n      task\r\n      completed\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOGGLE_COMPLETED = gql`\r\n  mutation($id: Int!, $completed: Boolean!) {\r\n    update_todos_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: { completed: $completed }\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_TODO = gql`\r\n  mutation($id: Int!) {\r\n    delete_todos_by_pk(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { GET_TODOS, REMOVE_TODO } from \"./graphql/queries\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({ todo }) => {\r\n  const [removeTodoMutation] = useMutation(REMOVE_TODO);\r\n\r\n  const toggleCompleted = ({ id, completed }) => {};\r\n\r\n  const removeTodo = (id) => {\r\n    removeTodoMutation({\r\n      variables: { id },\r\n      optimisticResponse: true,\r\n      update: (cache) => {\r\n        const existingTodos = cache.readQuery({ query: GET_TODOS });\r\n        const todos = existingTodos.todos.filter((t) => t.id !== id);\r\n        cache.writeQuery({\r\n          query: GET_TODOS,\r\n          data: { todos },\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div key={todo.id} className=\"task\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={todo.completed}\r\n        onChange={() => toggleCompleted(todo)}\r\n      />\r\n      <span className={todo.completed ? \"completed\" : \"\"}>{todo.task}</span>\r\n      <button type=\"submit\" onClick={() => removeTodo(todo.id)}>\r\n        remove\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport { GET_TODOS } from \"./graphql/queries\";\r\nimport Task from \"./Task\";\r\nimport \"./Tasks.css\";\r\n\r\nconst Tasks = () => {\r\n  const { loading, error, data } = useQuery(GET_TODOS);\r\n\r\n  if (loading) {\r\n    return <div className=\"tasks\">Loading...</div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"tasks\">Error!</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      {data.todos.map((todo) => (\r\n        <Task key={todo.id} todo={todo} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { ADD_TODO, GET_TODOS } from \"./graphql/queries\";\r\nimport \"./TodoInput.css\";\r\n\r\nconst updateCache = (cache, { data }) => {\r\n  const existingTodos = cache.readQuery({\r\n    query: GET_TODOS,\r\n  });\r\n\r\n  const newTodo = data.insert_todos_one;\r\n  cache.writeQuery({\r\n    query: GET_TODOS,\r\n    data: { todos: [...existingTodos.todos, newTodo] },\r\n  });\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [addTodo] = useMutation(ADD_TODO, { update: updateCache });\r\n\r\n  const submitTask = () => {\r\n    addTodo({ variables: { task } });\r\n    setTask(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a new task\"\r\n        className=\"taskInput\"\r\n        value={task}\r\n        onChange={(e) => setTask(e.target.value)}\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") submitTask();\r\n        }}\r\n      />\r\n      <button onClick={submitTask}>Add</button>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport Tasks from \"./Tasks\";\r\nimport TodoInput from \"./TodoInput\";\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://fair-blowfish-97.hasura.app/v1/graphql\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>ToDo App</p>\r\n        </header>\r\n        <br />\r\n        <TodoInput />\r\n        <Tasks />\r\n      </div>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}